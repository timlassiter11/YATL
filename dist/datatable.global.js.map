{"version":3,"sources":["../src/index.ts","../src/virtualScroll.ts","../src/utils.ts","../src/datatable.ts","../src/plugins/localStorageAdapter.ts"],"sourcesContent":["export * from \"./types\";\nexport * from \"./datatable\";\nexport * from \"./plugins/localStorageAdapter\"","const MAX_ELEMENT_HEIGHT = 33554400;\n\nexport class VirtualScroll {\n  static #warned = false;\n  \n  #container;\n  #element;\n  #generator;\n  #rowCount = 0;\n  #rowHeight = 0;\n  #padding = 2;\n  #animationFrame = 0;\n  #started = false;\n  #scrollTop = 0;\n\n  constructor({ container, element, generator, nodePadding = 2 }: VirtualScrollOptions) {\n    this.#container = container;\n    this.#element = element;\n    this.#generator = generator;\n    this.#padding = nodePadding;\n  }\n\n  get rowCount() {\n    return this.#rowCount;\n  }\n\n  set rowCount(count) {\n    this.#rowCount = count;\n    this.#renderChunk();\n  }\n\n  get rowHeight() {\n    if (!this.#rowHeight) {\n      this.#updateRowHeight();\n    }\n    return this.#rowHeight;\n  }\n\n  get started() {\n    return this.#started;\n  }\n\n  /*\n    * Scroll to a specific index in the virtual scroll.\n    * @param index The index to scroll to.\n    * @throws RangeError if the index is out of bounds.\n  */\n  scrollTo(index: number) {\n    if (index < 0 || index >= this.#rowCount) {\n      throw new RangeError(\"Index out of bounds.\");\n    }\n    this.#container.scrollTop = this.rowHeight * index;\n    this.#renderChunk();\n  }\n\n  #scrollCallback = () => {\n    // Only update if we are vertically scrolling.\n    // Fixes horizontal scroll bug.\n    if (this.#container.scrollTop !== this.#scrollTop) {\n      this.#scrollTop = this.#container.scrollTop;\n      if (this.#animationFrame) {\n        cancelAnimationFrame(this.#animationFrame);\n      }\n      this.#animationFrame = requestAnimationFrame(() => this.#renderChunk());\n    }\n  };\n\n  #renderCallback = () => {\n    this.#renderChunk();\n  };\n\n  start() {\n    if (this.#started) return;\n    this.#started = true;\n\n    this.#container.addEventListener(\"scroll\", this.#scrollCallback);\n    window.addEventListener(\"resize\", this.#renderCallback);\n\n    this.#renderChunk();\n  }\n\n  stop() {\n    if (this.#animationFrame) {\n      cancelAnimationFrame(this.#animationFrame);\n    }\n\n    this.#container.removeEventListener(\"scroll\", this.#scrollCallback);\n    window.removeEventListener(\"resize\", this.#renderCallback);\n    this.#started = false;\n  }\n\n  #renderChunk() {\n    const scrollTop = this.#container.scrollTop;\n    const rowCount = this.rowCount;\n    const rowHeight = this.rowHeight;\n    const padding = this.#padding;\n    const totalContentHeight = rowHeight * rowCount;\n    // Max out the element height so we can get a real height of the container.\n    // This fixes an issue when the parent isn't set to grow causing only a\n    // small number of rows to render until you scroll.\n    this.#element.innerHTML = `<tr style=\"height: ${totalContentHeight}px;\"></tr>`;\n    const actualHeight = this.#element.offsetHeight;\n    const viewHeight = this.#container.offsetHeight;\n\n    if (!VirtualScroll.#warned && actualHeight < Math.round(totalContentHeight - 1)) {\n      VirtualScroll.#warned = true;\n      console.error(\"Max element height exceeded. Virtual scroll may not work.\");\n    }\n\n    if (!rowCount || !rowHeight) {\n      return;\n    }\n\n    let startNode = Math.floor(scrollTop / rowHeight) - padding;\n    startNode = Math.max(0, startNode);\n\n    let visibleNodesCount = Math.ceil(viewHeight / rowHeight) + 2 * padding;\n    visibleNodesCount = Math.min(rowCount - startNode, visibleNodesCount);\n\n    const offsetY = startNode * rowHeight;\n    const remainingHeight =\n      totalContentHeight - (offsetY + visibleNodesCount * rowHeight);\n\n    try {\n      this.#element.innerHTML = \"\";\n      const visibleChildren = new Array(visibleNodesCount)\n        .fill(null)\n        .map((_, index) => this.#generator(index + startNode));\n      // We create two empty rows. One at the top and one at the bottom.\n      // Resize the rows accordingly to move the rendered rows to where we want.\n      let topRow = document.createElement(\"tr\");\n      let bottomRow = document.createElement(\"tr\");\n      topRow.style.height = offsetY + \"px\";\n      bottomRow.style.height = remainingHeight + \"px\";\n      this.#element.append(topRow);\n      this.#element.append(...visibleChildren);\n      this.#element.append(bottomRow);\n    } catch (e) {\n      if (e instanceof RangeError) {\n        console.log(e);\n      }\n    }\n  }\n\n  #updateRowHeight() {\n    if (this.#rowCount === 0) {\n      this.#rowHeight = 0;\n      return;\n    }\n\n    const renderSize = Math.min(1000, this.#rowCount);\n    // Create an average row height by rendering the first N rows.\n    const elements = [];\n    for (let i = 0; i < renderSize; ++i) {\n      elements.push(this.#generator(i));\n    }\n    this.#element.innerHTML = \"\";\n    this.#element.append(...elements);\n    this.#rowHeight = this.#element.offsetHeight / renderSize;\n\n    if (this.#rowHeight <= 0) {\n      throw new VirtualScrollError(\n        \"First 1000 rows had no rendered height. Virtual scroll can't be used.\"\n      );\n    } else if (this.#rowHeight * this.#rowCount > MAX_ELEMENT_HEIGHT) {\n      // This seems to be Chrome's max height of an element based on some random testing.\n      console.warn(\n        \"Virtual scroll height exceeded maximum known element height.\"\n      );\n    }\n  }\n}\n\nexport class VirtualScrollError extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\nexport interface VirtualScrollOptions {\n  container: HTMLElement;\n  element: HTMLElement;\n  generator: (index: number) => HTMLElement;\n  nodePadding?: number;\n}","export const classesToArray = (classes: string[] | string | undefined) => {\n  if (typeof classes === \"string\") {\n    return classes.split(\" \");\n  } else if (Array.isArray(classes)) {\n    return classes;\n  } else if (classes == null) {\n    return [];\n  }\n  throw new TypeError(\"classes must be string or array of strings\");\n};\n\n/*\n  * Converts a string to a human-readable format.\n  * - Replaces underscores with spaces\n  * - Inserts spaces before uppercase letters (for camelCase)\n  * - Capitalizes the first letter of each word\n  *\n  * @param {string} str - The input string to convert.\n  * @returns {string} - The converted human-readable string.\n  */\nexport const toHumanReadable = (str: string) => {\n  return str\n    // Replace underscores with spaces\n    .replace(/_/g, \" \")\n    // Insert spaces before uppercase letters (for camelCase)\n    .replace(/([a-z])([A-Z])/g, \"$1 $2\")\n    // Capitalize the first letter of each word\n    .replace(/\\b\\w/g, (char) => char.toUpperCase());\n}\n\n/**\n * Tokenizes a string into an array of lowercase words separated by whitespace.\n */\nexport const whitespaceTokenizer = (value: any) =>\n    String(value)\n      .toLowerCase()\n      .replace(/[^\\w\\s]/g, \" \")\n      .trim()\n      .split(/\\s+/);","import './datatable.css';\n\nimport { VirtualScroll, VirtualScrollError } from './virtualScroll';\nimport { classesToArray, toHumanReadable, whitespaceTokenizer } from './utils';\nimport {\n  CellFormatterCallback,\n  ColumnFilterCallback,\n  ColumnOptions,\n  ColumnState,\n  ComparatorCallback,\n  FilterCallback,\n  RowFormatterCallback,\n  SortOrder,\n  SortValueCallback,\n  TableClasses,\n  TableOptions,\n  TokenizerCallback,\n  ValueFormatterCallback\n} from './types';\n\n/**\n * Class for creating a DataTable that will add sort, search, filter, and virtual scroll to a table.\n */\nexport class DataTable {\n\n  static Events = {\n    ROW_CLICK: \"dt.row.click\",\n    ROWS_CHANGED: \"dt.rows.changed\",\n    COL_HIDE: \"dt.col.hide\",\n    COL_SHOW: \"dt.col.show\",\n    COL_SORT: \"dt.col.sort\",\n    COL_RESIZE: \"dt.col.resize\",\n    COL_REARRANGE: \"dt.col.rearrange\",\n  }\n\n  // Table elements\n  #table!: HTMLTableElement;\n  #thead!: HTMLElement;\n  #tbody!: HTMLElement;\n  #tfoot!: HTMLElement;\n  #scroller!: HTMLElement;\n\n  #columnData: { [key: string]: ColumnData } = {};\n\n  // Current data\n  #rows: RowData[] = [];\n  #filteredRows: RowData[] = [];\n\n  // Search and filter data\n  #query!: RegExp | string | null;\n  #filters!: any | FilterCallback;\n  // Search fields that are not columns.\n  #extraSearchFields: string[] = [];\n\n  #rowFormatter?: RowFormatterCallback;\n  #virtualScroll!: VirtualScroll;\n  #virtualScrollCount: number = 1000;\n  #highlightSearch: boolean = true;\n  #tokenizer: TokenizerCallback = whitespaceTokenizer\n  // The current sort priority. Incremented when a column is sorted.\n  #sortPriority: number = 0;\n  #noDataText: string = \"No records found\";\n  #noMatchText: string = \"No matching records found\";\n  #classes: TableClasses = {\n    scroller: \"dt-scroller\",\n    thead: \"dt-headers\",\n  };\n  #resizingColumn: ColumnData | null = null;\n\n  /**\n   * @param  table - Selector or HTMLElement for the table.\n   * @param options - Options for the table.\n   */\n  constructor(table: string | HTMLTableElement, {\n    formatter,\n    columns = [],\n    data,\n    virtualScroll = 1000,\n    highlightSearch = true,\n    resizable = true,\n    rearrangeable = false,\n    extraSearchFields,\n    noDataText,\n    noMatchText,\n    classes,\n    tokenizer,\n  }: TableOptions = {}) {\n    if (typeof table === \"string\") {\n      const tableElement = document.querySelector(table);\n      if (!tableElement)\n        throw new SyntaxError(`Failed to find table using selector ${table}`);\n      this.#table = tableElement as HTMLTableElement;\n    } else {\n      this.#table = table;\n    }\n\n    if (!(this.#table instanceof HTMLTableElement)) {\n      throw new TypeError(`Invalid table element type. Must be HTMLTableElement`);\n    }\n\n    if (!Array.isArray(columns)) {\n      throw new TypeError(\"columns must be a list of columns\");\n    }\n\n    this.#tokenizer = tokenizer || this.#tokenizer;\n\n    this.#highlightSearch = highlightSearch;\n    this.#extraSearchFields = extraSearchFields || [];\n    this.#noDataText = noDataText || \"No records found\";\n    this.#noMatchText = noMatchText || \"No matching records found\";\n    this.#classes = { ...this.#classes, ...classes };\n\n    this.#rowFormatter = formatter;\n\n    this.#table.classList.add(\"data-table\");\n\n    // Inner element that handles the virtual scroll.\n    this.#scroller = document.createElement(\"div\");\n    this.#scroller.classList.add(...classesToArray(this.#classes.scroller));\n    this.#scroller.style.overflow = \"auto\";\n    this.#scroller.style.height = \"100%\";\n\n    // If the user tries to provide a height, we will use that for the scroller.\n    if (this.#table.style.height !== \"\") {\n      this.#scroller.style.height = this.#table.style.height;\n      this.#table.style.height = \"\";\n    }\n\n    // Add the scroller before the table so when we move the\n    // table into the scroller it stays in the same place.\n    this.#table.parentElement?.insertBefore(this.#scroller, this.#table);\n    this.#scroller.append(this.#table);\n\n    if (this.#table.querySelectorAll(\"thead\").length > 1) {\n      console.warn(\"Multiple theads found in table. Using last one.\");\n    }\n\n    if (this.#table.querySelectorAll(\"tbody\").length > 1) {\n      console.warn(\"Multiple tbodys found in table. Using first one.\");\n    }\n\n    // Hopefully there isn't more than one header or body\n    // but if there is, use the last header and first body\n    // since that seems like it would make the most sense.\n    const thead = this.#table.querySelector(\"thead:last-of-type\");\n    if (thead) {\n      this.#thead = thead as HTMLTableElement;\n    } else {\n      this.#thead = document.createElement(\"thead\");\n      this.#table.insertBefore(this.#thead, this.#table.firstChild);\n    }\n\n    this.#thead.classList.add(...classesToArray(this.#classes.thead));\n\n    // Create the row for the thead if there isn't one\n    let headerRow = this.#thead.querySelector(\"tr:last-of-type\");\n    if (!headerRow) {\n      headerRow = document.createElement(\"tr\");\n      this.#thead.append(headerRow);\n    }\n\n    headerRow.classList.add(...classesToArray(this.#classes.tr));\n    // Remove any existing header cells\n    // TODO: Add ability to use HTML headers provided by the user.\n    headerRow.innerHTML = '';\n\n    const tbody = this.#table.querySelector(\"tbody:first-of-type\");\n    // Create the tbody if it doesn't exists\n    if (tbody) {\n      this.#tbody = tbody as HTMLTableElement;\n    } else {\n      this.#tbody = document.createElement(\"tbody\");\n      this.#table.append(this.#tbody);\n    }\n\n    this.#tbody.classList.add(...classesToArray(this.#classes.tbody));\n\n    this.#tbody.addEventListener(\"click\", (event) => {\n      let tr, td, field;\n      if (event.target instanceof HTMLTableCellElement) {\n        td = event.target;\n        tr = td.parentElement;\n        field = td.dataset.dtField;\n      } else if (event.target instanceof HTMLTableRowElement) {\n        tr = event.target;\n      }\n\n      if (tr) {\n        const index = parseInt(tr.dataset.dtIndex || \"\");\n        if (!isNaN(index)) {\n          const row = this.#filteredRows[index];\n\n          const event = new CustomEvent(DataTable.Events.ROW_CLICK, {\n            detail: {\n              row: row,\n              index: index,\n              field: field,\n            },\n            bubbles: true,\n            cancelable: true,\n          });\n          tr.dispatchEvent(event);\n        }\n      }\n    });\n\n    Boolean\n\n    let colVisible = false;\n    // Initialize columns\n    for (const colOptions of columns) {\n      const colData: ColumnData = {\n        field: colOptions.field,\n        title: colOptions.title || toHumanReadable(colOptions.field),\n        element: document.createElement(\"th\"),\n        visible: colOptions.visible ?? true,\n        sortable: colOptions.sortable ?? false,\n        searchable: colOptions.searchable ?? false,\n        tokenize: colOptions.tokenize ?? false,\n        sortOrder: colOptions.sortOrder ?? null,\n        sortPriority: colOptions.sortPriority ?? 0,\n        resizeStartWidth: null,\n        resizeStartX: null,\n        valueFormatter: colOptions.valueFormatter,\n        elementFormatter: colOptions.elementFormatter,\n        comparatorCallback: colOptions.sorter,\n        filterCallback: colOptions.filter,\n        sortValueCallback: colOptions.sortValue\n      };\n      this.#columnData[colOptions.field] = colData;\n\n      const th = colData.element;\n      th.classList.add(...classesToArray(this.#classes.th));\n      th.dataset.dtField = colOptions.field;\n\n      const nameElement = document.createElement(\"div\");\n      nameElement.classList.add(\"dt-header-name\");\n      nameElement.innerText = colOptions.title || toHumanReadable(colOptions.field);\n      th.innerHTML = '';\n      th.append(nameElement);\n      th.hidden = !colData.visible;\n\n      headerRow.append(th);\n\n      // We need at least one column visible\n      if (colData.visible) {\n        colVisible = true;\n      }\n\n      if (colOptions.sortable) {\n        th.classList.add(\"dt-sortable\");\n        // Add the event listener to the name element\n        // to prevent clicking on the resizer from sorting.\n        nameElement.addEventListener(\"click\", (event) => {\n          const target = event.target as HTMLElement;\n          const field = target.closest(\"th\")?.dataset.dtField;\n          if (!field) return;\n          const col = this.#columnData[field];\n          if (!col.sortOrder) {\n            this.sort(col.field, \"asc\");\n          } else if (col.sortOrder === \"asc\") {\n            this.sort(col.field, \"desc\");\n          } else if (col.sortOrder) {\n            this.sort(col.field, null);\n          }\n        });\n      }\n\n      const enableResize = colOptions.resizable === undefined ? resizable : colOptions.resizable;\n\n      if (enableResize) {\n        const resizer = document.createElement(\"div\");\n        resizer.classList.add(\"dt-resizer\");\n        resizer.addEventListener(\"mousedown\", this.#resizeColumnStart);\n        resizer.addEventListener(\"dblclick\", this.#resizeColumnDoubleClick);\n        th.append(resizer);\n      }\n\n      if (typeof colOptions.width === \"number\") {\n        th.style.width = colOptions.width + \"px\";\n      } else if (typeof colOptions.width === \"string\") {\n        th.style.width = colOptions.width;\n      }\n\n      if (rearrangeable) {\n        th.draggable = true;\n        th.addEventListener(\"dragstart\", this.#dragColumnStart);\n        th.addEventListener(\"dragenter\", this.#dragColumnEnter);\n        th.addEventListener(\"dragover\", this.#dragColumnOver);\n        th.addEventListener(\"dragleave\", this.#dragColumnLeave);\n        th.addEventListener(\"drop\", this.#dragColumnDrop);\n        th.addEventListener(\"dragend\", this.#dragColumnEnd);\n      }\n    }\n\n    if (Object.keys(this.#columnData).length === 0) {\n      console.warn(\"No columns found. At least one column is required.\");\n    } else if (!colVisible) {\n      console.warn(\"At least a single column must be visible. Showing the first column.\");\n      this.showColumn(Object.keys(this.#columnData)[0]);\n    }\n\n    this.#virtualScroll = new VirtualScroll({\n      container: this.#scroller,\n      element: this.#tbody,\n      generator: (index) => this.#createRow(index),\n    });\n\n    this.virtualScroll = virtualScroll;\n    this.loadData(data || []);\n  }\n\n  /**\n   * Gets a list of the ColumnStates for all columns in the table\n   * Can be used to save / restore columns sates.\n   */\n  get columnStates(): ColumnState[] {\n    return Object.values(this.#columnData).map((col) => {\n      return {\n        field: col.field,\n        title: col.title,\n        visible: col.visible,\n        sortOrder: col.sortOrder,\n        sortPriority: col.sortPriority,\n        width: col.element.style.width,\n      } as ColumnState;\n    });\n  }\n\n  set columnStates(states: ColumnState[]) {\n    for (const state of states) {\n      const column = this.#columnData[state.field];\n      if (!column) {\n        console.warn(`Attempting to restore state for non-existent column ${state.field}`);\n        continue;\n      }\n\n      column.visible = state.visible ?? column.visible;\n      column.sortOrder = state.sortOrder ?? column.sortOrder;\n      column.sortPriority = state.sortPriority ?? column.sortPriority;\n      column.element.style.width = state.width ?? column.element.style.width;\n    }\n    this.refresh();\n  }\n\n  /**\n   * Get the current data in the table.\n   */\n  get rows() {\n    return this.#filteredRows;\n  }\n\n  /**\n   * Get total row count of visible data.\n   */\n  get length(): number {\n    return this.#filteredRows ? this.#filteredRows.length : 0;\n  }\n\n  /**\n   * Get the current table element.\n   */\n  get table(): HTMLTableElement {\n    return this.#table;\n  }\n\n  /**\n   * Get the current virtual scroll setting.\n   * If the value is 0, virtual scroll is disabled.\n   * If the value is true, virtual scroll is enabled.\n   * If the value is a number, it will be used as the row count for virtual scroll.\n   */\n  get virtualScroll(): number | boolean {\n    if (this.#virtualScrollCount === Number.MAX_VALUE) {\n      return true;\n    } else if (this.#virtualScrollCount === 0) {\n      return false;\n    }\n    return this.#virtualScrollCount;\n  }\n\n  set virtualScroll(value) {\n    if (typeof value === \"number\") {\n      this.#virtualScrollCount = value;\n    } else if (value) {\n      this.#virtualScrollCount = 0;\n    } else {\n      this.#virtualScrollCount = Number.MAX_VALUE;\n    }\n    this.#updateTable();\n  }\n\n  /**\n   * Get the current virtual scroll status.\n   */\n  get virtualScrollStatus(): boolean {\n    return this.#virtualScroll.started;\n  }\n\n  /**\n   * Loads the given rows into the table.\n   * This will overwrite any already existing rows.\n   */\n  loadData(rows: any[]) {\n    if (Array.isArray(rows) && rows.length > 0) {\n      let index = 0;\n\n      for (const row of rows as RowData[]) {\n        // Add the index\n        const metadata: RowMeatadata = { index: index++ };\n        row._metadata = metadata;\n\n        for (const field of Object.keys(this.#columnData)) {\n          const col = this.#columnData[field];\n          const value = this.#getNestedValue(row, field);\n\n          // Cache precomputed values for sorting\n          if (typeof col.sortValueCallback === \"function\") {\n            metadata[`_${field}_sort`] = col.sortValueCallback(value);\n          } else if (typeof value === \"string\") {\n            metadata[`_${field}_sort`] = value.toLocaleLowerCase();\n          } else {\n            metadata[`_${field}_sort`] = value;\n          }\n\n          // Tokenize any searchable columns\n          if (col.searchable && col.tokenize && value) {\n            metadata[`_${field}_tokens`] = [value, ...this.#tokenizer(value)];\n          }\n        }\n      }\n      this.#rows = rows;\n      this.#filteredRows = rows;\n    } else {\n      this.#rows = [];\n      this.#filteredRows = [];\n    }\n\n    this.#updateHeaders();\n    this.#filterRows();\n  }\n\n  /**\n   * Shows a message overlay that will cover the table.\n   */\n  showMessage(text: string, classes: string | string[]) {\n    if (Array.isArray(classes)) {\n      classes = classes.join(\" \");\n    } else if (typeof classes !== \"string\") {\n      classes = \"\";\n    }\n\n    const colSpan = Object.keys(this.#columnData).length;\n    this.#tbody.innerHTML = `<tr class=\"${classes}\"><td colSpan=${colSpan}>${text}</td></tr>`;\n  }\n\n  /**\n   * Search the table using the given query.\n   * The query can be a string or a regular expression.\n   * If the query is an empty string, it will clear the search.\n   * @param query\n   */\n  search(query: string | RegExp) {\n    this.#query = query !== \"\" ? query : null;\n    this.#filterRows();\n  }\n\n  /**\n   * Apply the given filters to the table.\n   * Filters should be an object with keys for any columns\n   * to be filtered and values to match against the underlying data.\n   * E.g. {quantity: 1} will only show rows where the quantity column = 1\n   * Can also be a function that will be called for each row.\n   * @param filters\n   */\n  filter(filters: any | FilterCallback) {\n    if (typeof filters !== \"object\" && typeof filters !== \"function\") {\n      throw new TypeError(\"filters must be object or function\");\n    }\n    this.#filters = filters;\n    this.#filterRows();\n  }\n\n  /**\n   * Sort the given column using the given order (asc or desc).\n   * If order is none, the columns will be \"unsorted\" and revert\n   * revert back to sorting the by the index ascending.\n   * @param colName\n   * @param order\n   */\n  sort(colName: string, order: SortOrder) {\n    const col = this.#columnData[colName];\n    if (!col) {\n      console.warn(`Attempting to sort non-existent column ${colName}`);\n      return;\n    }\n\n    if (order != col.sortOrder) {\n      if (order === \"asc\" || order === \"desc\") {\n        // If we are changing the sort order of a column\n        // keep it's existing priority.\n        if (col.sortPriority === Number.MAX_VALUE) {\n          col.sortPriority = this.#sortPriority++;\n        }\n      } else {\n        col.sortPriority = Number.MAX_VALUE;\n        this.#sortPriority--;\n      }\n      col.sortOrder = order;\n    }\n\n    this.#updateHeaders();\n    this.#sortRows();\n\n    const event = new CustomEvent(DataTable.Events.COL_SORT, {\n      detail: {\n        column: col,\n        order: col.sortOrder,\n      },\n      bubbles: true,\n      cancelable: true,\n    });\n\n    this.#table.dispatchEvent(event);\n  }\n\n  /**\n   * Set the visibility of a column.\n   * @param colName\n   * @param visible\n   */\n  setColumnVisibility(colName: string, visisble: boolean) {\n    const col = this.#columnData[colName];\n    if (!col) {\n      console.warn(\n        `Attempting to ${visisble ? \"show\" : \"hide\"\n        } non-existent column ${colName}`\n      );\n      return;\n    }\n\n    col.visible = visisble;\n    this.#updateHeaders();\n    // If we hide a column that has sorting, we need to resort.\n    // This will also handle hiding all of the columns elements.\n    this.#sortRows();\n\n    const eventName = visisble ? DataTable.Events.COL_SHOW : DataTable.Events.COL_HIDE;\n    const event = new CustomEvent(eventName, {\n      detail: {\n        column: col,\n        visible: visisble,\n      },\n      bubbles: true,\n      cancelable: true,\n    });\n\n    this.#table.dispatchEvent(event);\n  }\n\n  /**\n   * Show a column.\n   * @param field\n   */\n  showColumn(field: string) {\n    this.setColumnVisibility(field, true);\n  }\n\n  /**\n   * Hide a column.\n   * @param field\n   */\n  hideColumn(field: string) {\n    this.setColumnVisibility(field, false);\n  }\n\n  /**\n   * Export the current visible table data to a CSV file.\n   * @param filename - The name of the file to save.\n   * @param all - If true, export all rows. If false, only export the filtered rows.\n   */\n  export(filename: string, all = false) {\n    const rows = all ? this.#rows : this.#filteredRows;\n    if (rows.length === 0) {\n      return;\n    }\n\n    const csvHeaders = Object.keys(rows[0]).filter((value) => {\n      if (!(value in this.#columnData)) {\n        return false;\n      }\n\n      return all ? true : this.#columnData[value].element.hidden === false;\n    });\n\n    const csvRows = rows\n      .map((row) => {\n        const list = [];\n        for (let [key, value] of Object.entries(row)) {\n          if (key in this.#columnData) {\n            const col = this.#columnData[key];\n            if (all || !col.element.hidden) {\n              if (typeof col.valueFormatter === \"function\") {\n                value = col.valueFormatter(value, row);\n              }\n\n              value = String(value).replace('\"', '\"\"');\n              list.push(`\"${value}\"`);\n            }\n          }\n        }\n        return list.join(\",\");\n      })\n      .join(\"\\n\");\n\n    const csvContent = csvHeaders + \"\\n\" + csvRows;\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8,\" });\n    const a = document.createElement(\"a\");\n    a.style.display = \"none\";\n    a.href = URL.createObjectURL(blob);\n    a.download = `${filename}.csv`;\n    document.body.append(a);\n    a.click();\n    a.remove();\n  }\n\n  /**\n   * Scrolls to the given row index in the table.\n   * @param index\n   */\n  scrollTo(index: number) {\n    if (this.#virtualScroll.started) {\n      this.#virtualScroll.scrollTo(index);\n    }\n\n    const row = this.#tbody.querySelector(`tr[data-dt-index=\"${index}\"]`);\n    if (row) {\n      row.scrollIntoView(true);\n      const theadHeight = parseFloat(getComputedStyle(this.#thead).height);\n      this.#scroller.scrollTop -= theadHeight;\n    }\n  }\n\n  /**\n   * Sets the order of the columns in the table.\n   * @param fields \n   */\n  setColumnOrder(fields: string[]) {\n    if (!Array.isArray(fields)) {\n      throw new TypeError(\"fields must be an array of field names\");\n    }\n\n    const newColumns = fields.map((field) => this.#columnData[field])\n      .filter((col) => col !== null);\n\n    this.#columnData = Object.fromEntries(newColumns.map((col) => [col.field, col]));\n    this.refresh();\n  }\n\n  refresh() {\n    this.#updateHeaders();\n    this.#filterRows();\n  }\n\n  #searchField(value: any, query: RegExp | string): boolean {\n    if (Array.isArray(value)) {\n      return value.some((element) => this.#searchField(element, query));\n    }\n\n    if (query instanceof RegExp) {\n      return query.test(String(value));\n    }\n\n    return String(value).toLocaleLowerCase().includes(query);\n  }\n\n  #filterField(value: any, filter: any, filterFunction?: ColumnFilterCallback): boolean {\n    if (Array.isArray(filter)) {\n      // If it's an array, we will use an OR filter.\n      // If any filters in the array match, keep it.\n      for (const element of filter) {\n        if (this.#filterField(value, element)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    if (typeof filterFunction === \"function\") {\n      return filterFunction(value, filter);\n    }\n\n    if (filter instanceof RegExp) {\n      return filter.test(String(value));\n    }\n\n    return filter === value;\n  }\n\n  #filterRow(row: any, index: number): boolean {\n    if (typeof this.#filters === \"function\") {\n      return this.#filters(row, index);\n    }\n\n    for (const field of Object.keys(this.#filters || {})) {\n      const filter = this.#filters[field];\n      const col = this.#columnData[field];\n      const filterCallback = col ? col.filterCallback : undefined;\n      const value = this.#getNestedValue(row, field);\n      if (!this.#filterField(value, filter, filterCallback)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  #filterRows() {\n    const filter =\n      typeof this.#filters === \"function\"\n        ? this.#filters\n        : (row: object, index: number) => this.#filterRow(row, index);\n\n    let query: RegExp | string | null = null;\n    let queryTokens: string[] | RegExp[] = [];\n    if (this.#query instanceof RegExp) {\n      query = this.#query;\n      queryTokens = [query];\n    } else if (typeof this.#query === \"string\") {\n      query = this.#query.toLocaleLowerCase();\n      queryTokens = this.#tokenizer(query);\n    }\n\n    this.#filteredRows = this.#rows.filter((row, index) => {\n      row._metadata.searchScore = 0;\n      // Filter takes precedence over search.\n      if (!filter(row, index)) {\n        return false;\n      }\n\n      if (!query) {\n        return true;\n      }\n\n      const searchableFields = Object.values(this.#columnData)\n        .filter((col) => col.searchable)\n        .map((c) => c.field);\n\n      const fields = [...searchableFields, ...this.#extraSearchFields];\n\n      for (const field of fields) {\n        const col = this.#columnData[field];\n        const tokenKey = `_${field}_tokens`;\n        if (col && tokenKey in row._metadata) {\n          const fieldTokens = row._metadata[tokenKey];\n          for (const token of queryTokens) {\n            if (this.#searchField(fieldTokens, token)) {\n              if (typeof token === \"string\") {\n                row._metadata.searchScore += token.length;\n              } else {\n                row._metadata.searchScore++;\n              }\n            }\n          }\n        } else {\n          const value = this.#getNestedValue(row, field);\n          if (this.#searchField(value, query)) {\n            if (typeof query === \"string\") {\n              row._metadata.searchScore += query.length;\n            } else {\n              row._metadata.searchScore++;\n            }\n          }\n        }\n      }\n\n      return row._metadata.searchScore > 0;\n    });\n\n    this.#sortRows();\n    this.#updateTable();\n\n    this.#table.dispatchEvent(new CustomEvent(DataTable.Events.ROWS_CHANGED, {\n      bubbles: true,\n      cancelable: true,\n    }));\n  }\n\n  #compareRows(a: RowData, b: RowData, col: ColumnOptions): number {\n    let aValue, bValue;\n    if (col.sortOrder === \"asc\") {\n      aValue = a._metadata[`_${col.field}_sort`];\n      bValue = b._metadata[`_${col.field}_sort`];\n    } else if (col.sortOrder === \"desc\") {\n      aValue = b._metadata[`_${col.field}_sort`];\n      bValue = a._metadata[`_${col.field}_sort`];\n    }\n\n    if (typeof col.sorter === \"function\") {\n      const ret = col.sorter(aValue, bValue);\n      if (ret !== 0) return ret;\n    }\n\n    if (aValue < bValue) return -1;\n    if (aValue > bValue) return 1;\n    return 0;\n  }\n\n  #sortRows() {\n    const sortedColumns = Object.values(this.#columnData)\n      // Only sort by visible columns with valid sort priorities\n      .filter((col) => !col.element.hidden && col.sortOrder)\n      // Sort our columns by their sort priority.\n      // This is how sorting by multiple columns is handled.\n      .sort((a, b) => a.sortPriority - b.sortPriority);\n\n    this.#filteredRows.sort((a, b) => {\n      // Try to sort by search score if there is a query.\n      let aValue = a._metadata.searchScore || 0;\n      let bValue = b._metadata.searchScore || 0;\n      if (aValue > bValue) return -1;\n      if (aValue < bValue) return 1;\n\n      for (const col of sortedColumns) {\n        const comp = this.#compareRows(a, b, col);\n        if (comp !== 0) {\n          return comp;\n        }\n      }\n\n      // Always fall back to the index column\n      return a._metadata.index - b._metadata.index;\n    });\n    this.#updateTable();\n  }\n\n  #updateHeaders() {\n    for (const field of Object.keys(this.#columnData)) {\n      const col = this.#columnData[field];\n\n      // Update the order of headers\n      col.element.parentElement?.append(col.element);\n      col.element.hidden = !col.visible;\n\n      if (col.element.style.width == \"\") {\n        col.element.style.width = col.element.offsetWidth + \"px\";\n      }\n\n      if (col.sortOrder === \"asc\") {\n        col.element?.classList.add(\"dt-ascending\");\n        col.element?.classList.remove(\"dt-descending\");\n      } else if (col.sortOrder === \"desc\") {\n        col.element?.classList.add(\"dt-descending\");\n        col.element?.classList.remove(\"dt-ascending\");\n      } else {\n        col.element?.classList.remove(\"dt-ascending\");\n        col.element?.classList.remove(\"dt-descending\");\n      }\n    }\n\n    // The last header should never have a width. This forces it to fill\n    // the remaining space in the table. Without this, resizing can feel \"jumpy\".\n    const lastCol = Object.values(this.#columnData).filter((c) => c.visible).slice(-1)[0];\n    if (lastCol) {\n      lastCol.element.style.width = \"\";\n    }\n  }\n\n  #updateTable() {\n    this.#tbody.innerHTML = \"\";\n    if (this.#filteredRows.length) {\n      let virtualScroll = false;\n      if (this.#filteredRows.length >= this.#virtualScrollCount) {\n        try {\n          this.#virtualScroll.rowCount = this.#filteredRows.length;\n          this.#virtualScroll.start();\n          virtualScroll = true;\n        } catch (error) {\n          if (error instanceof VirtualScrollError) {\n            console.warn(\n              \"Failed to start virtual scroll... falling back to standard rendering\"\n            );\n            console.warn(error.stack);\n          }\n        }\n      }\n\n      if (!virtualScroll) {\n        if (this.#filteredRows.length > WARN_ROW_COUNT) {\n          const count = WARN_ROW_COUNT.toLocaleString();\n          console.warn(\n            `Virtual scroll disabled with more than ${count} rows... Good luck with that!`\n          );\n        }\n\n        if (this.#virtualScroll) {\n          this.#virtualScroll.stop();\n        }\n        const rowElements = this.#filteredRows.map((_, index) => this.#createRow(index));\n        this.#tbody.append(...rowElements);\n      }\n    } else if (this.#rows.length === 0) {\n      this.showMessage(this.#noDataText, \"dt-empty\");\n    } else {\n      this.showMessage(this.#noMatchText, \"dt-empty\");\n    }\n  }\n\n  #updateCell(td: HTMLTableCellElement, value: any, col: ColumnData, row: object) {\n    if (typeof col.valueFormatter === \"function\") {\n      value = col.valueFormatter(value, row);\n    }\n    td.innerText = value == null ? \"-\" : value;\n\n    if (typeof col.elementFormatter === \"function\") {\n      col.elementFormatter(value, row, td);\n    }\n\n    if (\n      this.#highlightSearch &&\n      this.#query &&\n      this.#query != \"\" &&\n      col.searchable\n    ) {\n      td.innerHTML = td.innerText.replace(\n        new RegExp(this.#query, \"i\"),\n        (match) => `<mark>${match}</mark>`\n      );\n    }\n\n    td.hidden = col.visible ? false : true;\n  }\n\n  #createRow(index: number): HTMLTableRowElement {\n    const row = this.#filteredRows[index];\n    const tr = document.createElement(\"tr\");\n    tr.classList.add(...classesToArray(this.#classes.tr));\n    tr.dataset.dtIndex = String(index);\n\n    for (const field of Object.keys(this.#columnData)) {\n      let value = this.#getNestedValue(row, field);\n      const col = this.#columnData[field];\n      const td = document.createElement(\"td\");\n      td.classList.add(...classesToArray(this.#classes.td));\n      td.dataset.dtField = field;\n      this.#updateCell(td, value, col, row);\n      tr.append(td);\n    }\n\n    if (typeof this.#rowFormatter === \"function\") {\n      this.#rowFormatter(row, tr);\n    }\n\n    return tr;\n  }\n\n  #getNestedValue(obj: any, path: string) {\n    const keys = path.split(\".\");\n    let current = obj;\n\n    for (const key of keys) {\n      if (current && typeof current === \"object\") {\n        current = current[key];\n      } else {\n        return undefined; // Or handle the error as needed\n      }\n    }\n\n    return current;\n  }\n\n  #resizeColumnStart = (event: MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const target: HTMLElement = event.target as HTMLElement;\n    const header = target.closest(\"th\");\n    if (!header) return;\n\n    const field = header.dataset.dtField;\n    if (!field) return;\n\n    const col = this.#columnData[field];\n    if (!col) return;\n\n    this.#resizingColumn = col;\n\n    col.resizeStartX = event.clientX;\n    col.resizeStartWidth = header.offsetWidth;\n\n    document.addEventListener(\"mousemove\", this.#resizeColumnMove);\n    document.addEventListener(\"mouseup\", this.#resizeColumnEnd);\n  }\n\n  #resizeColumnMove = (event: MouseEvent) => {\n    if (!this.#resizingColumn) return;\n\n    event.preventDefault();\n    const newWidth = this.#resizingColumn.resizeStartWidth! + (event.clientX - this.#resizingColumn.resizeStartX!);\n    this.#resizingColumn.element.style.width = `${newWidth}px`;\n  }\n\n  #resizeColumnEnd = (event: MouseEvent) => {\n    if (!this.#resizingColumn) return;\n\n    document.removeEventListener(\"mousemove\", this.#resizeColumnMove);\n    document.removeEventListener(\"mouseup\", this.#resizeColumnEnd);\n    this.#table.dispatchEvent(new CustomEvent(DataTable.Events.COL_RESIZE, {\n      detail: {\n        column: this.#resizingColumn,\n        width: this.#resizingColumn.element.offsetWidth,\n      },\n      bubbles: true,\n      cancelable: true,\n    }));\n    this.#resizingColumn = null;\n  }\n\n  #resizeColumnDoubleClick = (event: MouseEvent) => {\n    const target = event.target as HTMLElement;\n    const header = target.closest(\"th\");\n    if (header) {\n      header.style.width = \"0px\";\n    }\n  }\n\n  #dragColumnStart = (event: DragEvent) => {\n    const target = event.target as HTMLElement;\n    const field = target.dataset.dtField;\n\n    console.log(\"dragColumnStart\", field);\n\n    if (event.dataTransfer && field) {\n      event.dataTransfer.effectAllowed = \"move\";\n      event.dataTransfer.setData(\"text/plain\", field);\n    }\n  }\n\n  #dragColumnOver = (event: DragEvent) => {\n    event.preventDefault();\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = \"move\";\n    }\n    return false;\n  }\n\n  #dragColumnEnter = (event: DragEvent) => {\n    const target = event.target as HTMLElement;\n    target.classList.add(\"dt-drag-over\");\n  }\n\n  #dragColumnLeave = (event: DragEvent) => {\n    const target = event.target as HTMLElement;\n    target.classList.remove(\"dt-drag-over\");\n  }\n\n  #dragColumnDrop = (event: DragEvent) => {\n    const dragField = event.dataTransfer?.getData(\"text/plain\");\n    const target = event.currentTarget as HTMLElement;\n    const dropField = target.dataset.dtField;\n\n    if (!dragField || !dropField) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    const columns = Object.values(this.#columnData);\n    const dragIndex = columns.findIndex((col) => col.field === dragField);\n    const dropIndex = columns.findIndex((col) => col.field === dropField);\n\n    if (dragIndex > -1 && dropIndex > -1) {\n      const [draggedColumn] = columns.splice(dragIndex, 1);\n      columns.splice(dropIndex, 0, draggedColumn);\n\n      // Update the #columns object\n      this.#columnData = Object.fromEntries(columns.map((col) => [col.field, col]));\n\n      // Clear width of the last column so it can fill the rest of the space.\n      const lastCol = columns[columns.length - 1];\n      if (lastCol && lastCol.element) {\n        lastCol.element.style.width = \"\";\n      }\n\n      // Re-render the table\n      this.#updateHeaders();\n      this.#updateTable();\n\n      this.#table.dispatchEvent(new CustomEvent(DataTable.Events.COL_REARRANGE, {\n        detail: {\n          draggedColumn: draggedColumn,\n          dropColumn: this.#columnData[dropField],\n          columns: columns,\n        },\n        bubbles: true,\n        cancelable: true,\n      }));\n    }\n  }\n\n  #dragColumnEnd = (event: DragEvent) => {\n    const elements = document.querySelectorAll(\".dt-drag-over\");\n    for (const element of elements) {\n      element.classList.remove(\"dt-drag-over\");\n    }\n  }\n}\n\ninterface ColumnData {\n  field: string;\n  title: string;\n  sortable: boolean;\n  searchable: boolean;\n  tokenize: boolean;\n  element: HTMLElement;\n  visible: boolean;\n  sortOrder: SortOrder;\n  sortPriority: number;\n  resizeStartX: number | null;\n  resizeStartWidth: number | null;\n  valueFormatter?: ValueFormatterCallback;\n  elementFormatter?: CellFormatterCallback;\n  comparatorCallback?: ComparatorCallback;\n  filterCallback?: ColumnFilterCallback;\n  sortValueCallback?: SortValueCallback;\n}\n\ninterface RowData {\n  [key: string]: any;\n  _metadata: RowMeatadata;\n}\n\ninterface RowMeatadata {\n  [key: string]: any;\n  index: number;\n  searchScore?: number;\n  tokens?: string[];\n  sortValue?: any;\n}\n\nconst WARN_ROW_COUNT = 10_000;","import { DataTable } from \"../datatable\";\nimport { ColumnState } from \"../types\";\n\ninterface Options {\n    saveColumnSorting: boolean;\n    saveColumnOrder: boolean;\n    saveColumnVisibility: boolean;\n    saveColumnWidth: boolean;\n}\n\nexport class LocalStorageAdapter {\n    #dataTable: DataTable;\n    #storageKey: string;\n    #options: Options = {\n        saveColumnSorting: true,\n        saveColumnVisibility: true,        \n        saveColumnWidth: true,\n        saveColumnOrder: true,\n    }\n\n    /**\n     * @param dataTable - The DataTable instance to monitor.\n     * @param storageKey - The key to use for saving the state in localStorage.\n     * @param options - The key to use for saving the state in localStorage.\n     */\n    constructor(dataTable: DataTable, storageKey: string, options?: Options) {\n        this.#dataTable = dataTable;\n        this.#storageKey = storageKey;\n        this.#options = { ...this.#options, ...options };\n\n        // Restore state before adding the listeners.\n        this.restoreState();\n\n        const table = dataTable.table;\n\n        if (this.#options.saveColumnSorting) {\n            table.addEventListener(DataTable.Events.COL_SORT, () => this.saveState());\n        }\n\n        if (this.#options.saveColumnVisibility) {\n            table.addEventListener(DataTable.Events.COL_HIDE, () => this.saveState());\n            table.addEventListener(DataTable.Events.COL_SHOW, () => this.saveState());\n        }\n\n        if (this.#options.saveColumnWidth) {\n            table.addEventListener(DataTable.Events.COL_RESIZE, () => this.saveState());\n        }\n\n        if (this.#options.saveColumnOrder) {\n            table.addEventListener(DataTable.Events.COL_REARRANGE, () => this.saveState());\n        }\n    }\n\n    /**\n     * Saves the current column state to localStorage.\n     */\n    saveState() {\n        const states = this.#dataTable.columnStates;\n        for (const state of states) {\n            if (!this.#options.saveColumnSorting) {\n                state.sortOrder = undefined;\n                state.sortPriority = undefined;\n            }\n\n            if (!this.#options.saveColumnVisibility) {\n                state.visible = undefined;\n            }\n\n            if (!this.#options.saveColumnWidth) {\n                state.width = undefined;\n            }\n        }\n\n        localStorage.setItem(this.#storageKey, JSON.stringify(this.#dataTable.columnStates));\n    }\n\n    /**\n     * Restores the column state from localStorage.\n     */\n    restoreState() {\n        const savedState = localStorage.getItem(this.#storageKey);\n        if (!savedState) return;\n\n        try {\n            const columnStates = JSON.parse(savedState) as ColumnState[];\n            this.#dataTable.columnStates = columnStates;\n\n            if (this.#options.saveColumnOrder) {\n                this.#dataTable.setColumnOrder(columnStates.map((col: ColumnState) => col.field));\n            }\n\n        } catch (error) {\n            console.error(\"Failed to restore DataTable state:\", error);\n        }\n    }\n\n    /**\n     * Clears the saved state from localStorage.\n     */\n    clearState() {\n        localStorage.removeItem(this.#storageKey);\n    }\n}"],"mappings":"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","names":["src_exports","__export","DataTable","LocalStorageAdapter","_warned","_container","_element","_generator","_rowCount","_rowHeight","_padding","_animationFrame","_started","_scrollTop","_scrollCallback","_renderCallback","_VirtualScroll_instances","renderChunk_fn","updateRowHeight_fn","_VirtualScroll","container","element","generator","nodePadding","__privateAdd","__privateGet","__privateSet","__privateMethod","count","index","scrollTop","rowCount","rowHeight","padding","totalContentHeight","actualHeight","viewHeight","startNode","visibleNodesCount","offsetY","remainingHeight","visibleChildren","_","topRow","bottomRow","e","renderSize","elements","i","VirtualScrollError","VirtualScroll","message","classesToArray","classes","toHumanReadable","str","char","whitespaceTokenizer","value","_table","_thead","_tbody","_tfoot","_scroller","_columnData","_rows","_filteredRows","_query","_filters","_extraSearchFields","_rowFormatter","_virtualScroll","_virtualScrollCount","_highlightSearch","_tokenizer","_sortPriority","_noDataText","_noMatchText","_classes","_resizingColumn","_DataTable_instances","searchField_fn","filterField_fn","filterRow_fn","filterRows_fn","compareRows_fn","sortRows_fn","updateHeaders_fn","updateTable_fn","updateCell_fn","createRow_fn","getNestedValue_fn","_resizeColumnStart","_resizeColumnMove","_resizeColumnEnd","_resizeColumnDoubleClick","_dragColumnStart","_dragColumnOver","_dragColumnEnter","_dragColumnLeave","_dragColumnDrop","_dragColumnEnd","_DataTable","table","formatter","columns","data","virtualScroll","highlightSearch","resizable","rearrangeable","extraSearchFields","noDataText","noMatchText","classes","tokenizer","__privateAdd","whitespaceTokenizer","event","header","field","col","__privateGet","__privateSet","newWidth","_a","dragField","dropField","dragIndex","dropIndex","draggedColumn","lastCol","__privateMethod","elements","element","_b","_c","_d","_e","_f","_g","tableElement","__spreadValues","classesToArray","thead","headerRow","tbody","tr","td","index","row","colVisible","colOptions","colData","toHumanReadable","th","nameElement","resizer","VirtualScroll","states","state","column","value","rows","metadata","text","colSpan","query","filters","colName","order","__privateWrapper","visisble","eventName","filename","all","csvHeaders","csvRows","list","key","csvContent","blob","a","theadHeight","fields","newColumns","filter","filterFunction","filterCallback","queryTokens","c","tokenKey","fieldTokens","token","b","aValue","bValue","ret","sortedColumns","comp","error","VirtualScrollError","WARN_ROW_COUNT","count","rowElements","_","match","obj","path","keys","current","DataTable","_dataTable","_storageKey","_options","LocalStorageAdapter","dataTable","storageKey","options","__privateAdd","__privateSet","__spreadValues","__privateGet","table","DataTable","states","state","savedState","columnStates","col","error"]}